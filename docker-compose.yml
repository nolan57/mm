version: '3.8'

services:
  web:
    build:
      context: .
      dockerfile: docker/Dockerfile
    volumes:
      - .:/app
      - static_volume:/app/static
      - media_volume:/app/media
    env_file:
      - .env
    environment:
      - DJANGO_ENV=${DJANGO_ENV:-development}
      - DATABASE=postgres
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
    depends_on:
      - db
      - redis
    command: gunicorn gysdhChatProject.wsgi:application --bind 0.0.0.0:8000

  db:
    image: postgres:12
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    environment:
      - POSTGRES_DB=${DB_NAME:-gysdh_chat}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
    ports:
      - "5432:5432"

  redis:
    image: redis:6-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  celery:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: celery -A gysdhChatProject worker -l info
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - DJANGO_ENV=${DJANGO_ENV:-development}
    depends_on:
      - web
      - db
      - redis

  daphne:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: daphne -b 0.0.0.0 -p 8001 gysdhChatProject.asgi:application
    volumes:
      - .:/app
    env_file:
      - .env
    environment:
      - DJANGO_ENV=${DJANGO_ENV:-development}
    depends_on:
      - web
      - redis

  backup:
    image: postgres:12
    volumes:
      - ./backups:/backups
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME:-gysdh_chat}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - BACKUP_DIR=/backups
    command: |
      /bin/bash -c '
      while true; do
        DATE=$$(date +%Y%m%d_%H%M%S)
        pg_dump -h db -U $$POSTGRES_USER $$POSTGRES_DB > /backups/backup_$$DATE.sql
        find /backups -type f -mtime +7 -delete
        sleep 86400
      done
      '
    depends_on:
      - db

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume: