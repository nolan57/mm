# Generated by Django 5.1.3 on 2024-12-15 11:57

import django.db.models.deletion
import django.utils.timezone
import gysdhChatApp.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("conferenceApp", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="UserGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, unique=True, verbose_name="组名"),
                ),
                ("description", models.TextField(blank=True, verbose_name="描述")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
            ],
            options={
                "verbose_name": "用户组",
                "verbose_name_plural": "用户组",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "number",
                    models.CharField(
                        default=gysdhChatApp.models.generate_unique_number,
                        editable=False,
                        max_length=6,
                        unique=True,
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "email",
                    models.EmailField(
                        default="default@example.com", max_length=255, unique=True
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="电话号码"
                    ),
                ),
                ("_encrypted_original_password", models.TextField(default="")),
                ("is_active", models.BooleanField(default=True)),
                ("is_admin", models.BooleanField(default=False)),
                ("can_publish_announcements", models.BooleanField(default=False)),
                ("can_private_message", models.BooleanField(default=False)),
                ("is_event_staff", models.BooleanField(default=False)),
                ("is_online", models.BooleanField(default=False)),
                ("last_activity", models.DateTimeField(auto_now=True)),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "company",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="users",
                        to="conferenceApp.company",
                        verbose_name="所属公司",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="users",
                        to="gysdhChatApp.usergroup",
                        verbose_name="用户组",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Announcement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(help_text="支持富文本格式")),
                (
                    "html_content",
                    models.TextField(blank=True, help_text="渲染后的HTML内容"),
                ),
                (
                    "file",
                    models.FileField(blank=True, null=True, upload_to="Announcement"),
                ),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "priority",
                    models.IntegerField(
                        choices=[(1, "低"), (2, "中"), (3, "高"), (4, "紧急")],
                        default=1,
                        verbose_name="优先级",
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="为空表示永不过期",
                        null=True,
                        verbose_name="过期时间",
                    ),
                ),
                (
                    "is_sticky",
                    models.BooleanField(
                        default=False,
                        help_text="置顶的公告会始终显示在列表顶部",
                        verbose_name="置顶",
                    ),
                ),
                (
                    "publisher",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="published_announcements",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "公告",
                "verbose_name_plural": "公告",
                "ordering": ["-is_sticky", "-priority", "-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="EmailTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="模板名称"
                    ),
                ),
                ("subject", models.CharField(max_length=200, verbose_name="邮件主题")),
                ("content", models.TextField(verbose_name="邮件内容")),
                ("description", models.TextField(blank=True, verbose_name="模板描述")),
                (
                    "variables",
                    models.JSONField(
                        default=dict,
                        help_text="以JSON格式存储可用于此模板的变量名及其描述",
                        verbose_name="可用变量",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_email_templates",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
            ],
            options={
                "verbose_name": "邮件模板",
                "verbose_name_plural": "邮件模板",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="FileDownloadLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_name", models.CharField(max_length=255)),
                (
                    "file_type",
                    models.CharField(
                        choices=[("message", "消息文件"), ("announcement", "公告文件")],
                        max_length=50,
                    ),
                ),
                ("content_type", models.CharField(max_length=100)),
                ("file_size", models.BigIntegerField()),
                ("source_id", models.IntegerField()),
                ("downloaded_at", models.DateTimeField(auto_now_add=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="downloads",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "文件下载记录",
                "verbose_name_plural": "文件下载记录",
                "ordering": ["-downloaded_at"],
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(blank=True, null=True)),
                ("file", models.FileField(blank=True, null=True, upload_to="Message")),
                ("timestamp", models.DateTimeField(default=django.utils.timezone.now)),
                ("is_private", models.BooleanField(default=False)),
                (
                    "is_recalled",
                    models.BooleanField(default=False, verbose_name="是否已撤回"),
                ),
                (
                    "recalled_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="撤回时间"
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(default=False, verbose_name="是否已删除"),
                ),
                (
                    "deleted_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="删除时间"
                    ),
                ),
                (
                    "deleted_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="deleted_messages",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="删除者",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="received_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reply_to",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="replies",
                        to="gysdhChatApp.message",
                    ),
                ),
                (
                    "sender",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="sent_messages",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["timestamp"],
            },
        ),
        migrations.CreateModel(
            name="Notice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("content", models.TextField(verbose_name="注意事项内容")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否激活"),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="发布时间"
                    ),
                ),
                (
                    "publisher",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="published_notices",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="发布者",
                    ),
                ),
            ],
            options={
                "verbose_name": "注意事项",
                "verbose_name_plural": "注意事项",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="SystemSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "chat_title",
                    models.CharField(
                        default="GYSDH CHAT", max_length=100, verbose_name="聊天室标题"
                    ),
                ),
                (
                    "chat_area_title",
                    models.CharField(
                        default="聊天区域", max_length=100, verbose_name="聊天区域标题"
                    ),
                ),
                (
                    "email_host",
                    models.CharField(
                        default="smtp.qq.com", max_length=100, verbose_name="邮件服务器"
                    ),
                ),
                (
                    "email_port",
                    models.IntegerField(default=587, verbose_name="服务器端口"),
                ),
                (
                    "email_host_user",
                    models.EmailField(
                        default="", max_length=255, verbose_name="邮箱账号"
                    ),
                ),
                (
                    "email_host_password",
                    models.CharField(default="", max_length=100, verbose_name="授权码"),
                ),
                (
                    "email_use_tls",
                    models.BooleanField(default=True, verbose_name="使用TLS"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="system_settings_updates",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="更新者",
                    ),
                ),
            ],
            options={
                "verbose_name": "系统设置",
                "verbose_name_plural": "系统设置",
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=50, unique=True, verbose_name="标签名"),
                ),
                (
                    "color",
                    models.CharField(
                        default="#3B82F6", max_length=20, verbose_name="标签颜色"
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="描述")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="created_tags",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="创建者",
                    ),
                ),
            ],
            options={
                "verbose_name": "标签",
                "verbose_name_plural": "标签",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="UserTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "added_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="添加时间"),
                ),
                (
                    "added_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="added_user_tags",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="添加者",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_users",
                        to="gysdhChatApp.tag",
                        verbose_name="标签",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_tags",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户标签",
                "verbose_name_plural": "用户标签",
                "ordering": ["added_at"],
                "unique_together": {("user", "tag")},
            },
        ),
    ]
